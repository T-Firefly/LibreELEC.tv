From 5ec63c781efc05a0c41da28bc41abf82192f9235 Mon Sep 17 00:00:00 2001
From: Kever Yang <kever.yang@rock-chips.com>
Date: Fri, 14 Jul 2017 16:28:14 +0800
Subject: [PATCH] sdram: size support ddr4

Change-Id: I74e7e52bb71c546c311b54a7da8eb8aae032d6e6
Signed-off-by: Kever Yang <kever.yang@rock-chips.com>
---
 arch/arm/mach-rockchip/sdram_common.c | 14 +++++++++-----
 1 file changed, 9 insertions(+), 5 deletions(-)

diff --git a/arch/arm/mach-rockchip/sdram_common.c b/arch/arm/mach-rockchip/sdram_common.c
index 76dbdc8..c5f7e93 100644
--- a/arch/arm/mach-rockchip/sdram_common.c
+++ b/arch/arm/mach-rockchip/sdram_common.c
@@ -14,7 +14,7 @@
 DECLARE_GLOBAL_DATA_PTR;
 size_t rockchip_sdram_size(phys_addr_t reg)
 {
-	u32 rank, col, bk, cs0_row, cs1_row, bw, row_3_4;
+	u32 rank, col, bk, cs0_row, cs1_row, bw, row_3_4, dbw, bg;
 	size_t chipsize_mb = 0;
 	size_t size_mb = 0;
 	u32 ch;
@@ -23,7 +23,7 @@ size_t rockchip_sdram_size(phys_addr_t reg)
 	u32 ch_num = 1 + ((sys_reg >> SYS_REG_NUM_CH_SHIFT)
 		       & SYS_REG_NUM_CH_MASK);
 
-	debug("%s %x %x\n", __func__, (u32)reg, sys_reg);
+	printf("%s %x %x\n", __func__, (u32)reg, sys_reg);
 	for (ch = 0; ch < ch_num; ch++) {
 		rank = 1 + (sys_reg >> SYS_REG_RANK_SHIFT(ch) &
 			SYS_REG_RANK_MASK);
@@ -37,16 +37,20 @@ size_t rockchip_sdram_size(phys_addr_t reg)
 			SYS_REG_BW_MASK));
 		row_3_4 = sys_reg >> SYS_REG_ROW_3_4_SHIFT(ch) &
 			SYS_REG_ROW_3_4_MASK;
+		dbw = sys_reg >> SYS_REG_DBW_SHIFT(ch) & SYS_REG_DBW_MASK;
+		/* only used by DDR4 */
+		bg = (dbw == 1) ? 1 : 2;
 
-		chipsize_mb = (1 << (cs0_row + col + bk + bw - 20));
+		chipsize_mb = (1 << (cs0_row + col + bg + bk + bw - 20));
 
 		if (rank > 1)
 			chipsize_mb += chipsize_mb >> (cs0_row - cs1_row);
 		if (row_3_4)
 			chipsize_mb = chipsize_mb * 3 / 4;
+
 		size_mb += chipsize_mb;
-		debug("rank %d col %d bk %d cs0_row %d bw %d row_3_4 %d\n",
-		      rank, col, bk, cs0_row, bw, row_3_4);
+		printf("rank %d col %d bk %d cs0_row %d bw %d row_3_4 %d dbw %d\n",
+				rank, col, bk, cs0_row, bw, row_3_4, dbw);
 	}
 
 	return (size_t)size_mb << 20;
-- 
2.9.2

